项目结构：

1. 单任务单线程断点续传

MainActivity -> DownloadService -> DownloadTask -> ThreadDAOImpl -> DBHelper
(FileInfo、ThreadInfo、ThreadDAO)
1).设置请求包的请求头信息，可指定获取数据的某一段数据
2).使用RandomAccessFile可以执行断点续传的写入内存的工作(即可以在文件的某一个位置写入)
3).线程依附于Service下载与线程依附于Activity下载的一个区别就是关闭应用之后，Service依旧在后台执行，而Activity则会关闭下载任务

2. 多任务多线程断点续传

SecondActivity -> MultiDownloadService -> MultiDownloadTask -> MultiThreadDAOImpl -> MultiDBHelper
(FileInfo、ThreadInfo、ThreadDAO、FileListAdapter)
1).多线程可以同时写入内存，但是要求写入的线程各自负责的字段之间不存在重叠
2).SQLite数据库不支持多线程同时修改、删除、新增数据库中的数据
3).使用线程池优化线程的创建与销毁，提高程序效率
4).优化UI布局，在Adapter中的getView函数中，恒定不变的控件与经常发生改变的控件要分开处理
5).多线程访问一个不变的对象时，可以考虑单例模式

3. 通知栏显示下载进度

ThirdActivity -> NotificationDownloadService -> NotificationDownloadTask -> MultiThreadDAOImpl -> MultiDBHelper
(FileInfo、ThreadInfo、ThreadDAO、NotificationFileListAdapter)
1).notification的设置、启动
2).Timer定时器的设置
3).Handler在组件之间进行通信
